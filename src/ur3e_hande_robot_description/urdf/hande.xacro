<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">

  <xacro:arg name="name" value="hande"/>

  <xacro:arg name="hande_joint_limit_params" default="$(find ur3e_hande_robot_description)/config/hande/joint_limits.yaml"/>
  <xacro:arg name="hande_kinematics_params" default="$(find ur3e_hande_robot_description)/config/hande/default_kinematics.yaml"/>
  <xacro:arg name="hande_physical_params" default="$(find ur3e_hande_robot_description)/config/hande/physical_parameters.yaml"/>
  <xacro:arg name="hande_visual_params" default="$(find ur3e_hande_robot_description)/config/hande/visual_parameters.yaml"/>

  <xacro:macro name="cylinder_inertial" params="radius length mass *origin">
    <inertial>
      <mass value="${mass}" />
      <xacro:insert_block name="origin" />
      <inertia ixx="${0.0833333 * mass * (3 * radius * radius + length * length)}" ixy="0.0" ixz="0.0"
        iyy="${0.0833333 * mass * (3 * radius * radius + length * length)}" iyz="0.0"
        izz="${0.5 * mass * radius * radius}" />
    </inertial>
  </xacro:macro>

  <xacro:property name="config_physical_parameters" value="${xacro.load_yaml(hande_physical_params)}"/>


  <!-- Extract subsections from yaml dictionaries -->
  <!-- <xacro:property name="sec_limits" value="${config_joint_limit_parameters['joint_limits']}"/> -->
  <!-- <xacro:property name="sec_dh_parameters" value="${config_physical_parameters['dh_parameters']}"/> -->
  <!-- <xacro:property name="sec_offsets" value="${config_physical_parameters['offsets']}"/> -->
  <xacro:property name="sec_inertia_parameters" value="${config_physical_parameters['inertia_parameters']}" />
  <!-- <xacro:property name="sec_mesh_files" value="${config_visual_parameters['mesh_files']}" scope="parent"/> -->
  <!-- <xacro:property name="sec_kinematics" value="${config_kinematics_parameters['kinematics']}" /> -->

  <xacro:property name="intertia_links" value="${sec_inertia_parameters['links']}" scope="parent"/>

  <xacro:property name="hande_base_mass" value="${sec_inertia_parameters['hande_base_mass']}" scope="parent"/>
  <xacro:property name="left_finger_mass" value="${sec_inertia_parameters['left_finger_mass']}" scope="parent"/>
  <xacro:property name="right_finger_mass" value="${sec_inertia_parameters['right_finger_mass']}" scope="parent"/>

  <xacro:property name="hande_base_inertia_radius" value="${intertia_links['hande_base']['radius']}" scope="parent"/>
  <xacro:property name="hande_base_inertia_length" value="${intertia_links['hande_base']['length']}" scope="parent"/>
  <xacro:property name="left_finger_inertia_radius" value="${intertia_links['left_finger']['radius']}" scope="parent"/>
  <xacro:property name="left_finger_inertia_length" value="${intertia_links['left_finger']['length']}" scope="parent"/>
  <xacro:property name="right_finger_inertia_radius" value="${intertia_links['right_finger']['radius']}" scope="parent"/>
  <xacro:property name="right_finger_inertia_length" value="${intertia_links['right_finger']['length']}" scope="parent"/>

  <xacro:property name="prop_hande_cog" value="${sec_inertia_parameters['center_of_mass']['hande_cog']}" scope="parent"/>
  <xacro:property name="prop_finger_cog" value="${sec_inertia_parameters['center_of_mass']['finger_cog']}" scope="parent"/>

  <xacro:property name="hande_base_cog" value="${prop_hande_cog['x']} ${prop_hande_cog['y']} ${prop_hande_cog['z']}" scope="parent"/>
  <xacro:property name="finger_cog" value="${prop_finger_cog['x']} ${prop_finger_cog['y']} ${prop_finger_cog['z']}" scope="parent"/>

  <xacro:property name="hande_base_radius" value="${sec_inertia_parameters['hande_base_radius']}" scope="parent"/>
  <xacro:property name="finger_radius" value="${sec_inertia_parameters['finger_radius']}" scope="parent"/>


<xacro:macro name="robotiq_hande" params="
    name
    prefix
    parent
    *origin
    joint_limits_parameters_file
    kinematics_parameters_file
    physical_parameters_file
    visual_parameters_file
    initial_positions:=${dict(joint_finger=0.01,robotiq_hande_base_to_right_finger=0.01)}" >

    <!-- customization to include hande -->
    <link name="${prefix}robotiq_hande_base_link">
<!--       <inertial>
        <origin xyz="0 0 0.04607" rpy="0 0 0" />
        <mass value="0.86387" />
        <inertia ixx="1017560E-9" ixy="0" ixz="2235E-9" iyy="1028041E-9" iyz="0" izz="489810E-9" />
      </inertial> -->
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://ur3e_hande_robot_description/meshes/hande/visual/hand-e.dae" scale="0.001 0.001 0.001" />
        </geometry>
        <material name="Gazebo/Black">
          <color rgba="0.1 0.1 0.1 1" />
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://ur3e_hande_robot_description/meshes/hande/collision/hand-e.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${hande_base_inertia_radius}" length="${hande_base_inertia_length}"  mass="${hande_base_mass}">
        <origin xyz="0.0 0.0 ${-0.5 * hande_base_inertia_length}" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <link name="${prefix}left_finger">
<!--       <inertial>
        <origin rpy="0 0 0" xyz="0.02262 -0.00759 0.00738"/>
        <mass value="0.03804"/>
        <inertia ixx="13567E-9" ixy="1849E-9" ixz="3622E-9" iyy="15784E-9" iyz="3616E-9" izz="7478E-9"/>
      </inertial> -->
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://ur3e_hande_robot_description/meshes/hande/visual/finger_1.dae" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="Gazebo/Grey">
          <color rgba="0.1 0.1 0.1 1"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://ur3e_hande_robot_description/meshes/hande/collision/finger_1.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${left_finger_inertia_radius}" length="${left_finger_inertia_length}"  mass="${left_finger_mass}">
        <origin xyz="0.0 0.0 ${-0.5 * left_finger_inertia_length}" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <link name="${prefix}right_finger">
<!--       <inertial>
        <origin rpy="0 0 0" xyz="-0.02262 0.00759 0.00738"/>
        <mass value="0.03804"/>
        <inertia ixx="13567E-9" ixy="1849E-9" ixz="-3622E-9" iyy="15784E-9" iyz="-3616E-9" izz="7478E-9"/>
      </inertial> -->
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://ur3e_hande_robot_description/meshes/hande/visual/finger_2.dae" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="Gazebo/Grey">
          <color rgba="0.1 0.1 0.1 1"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://ur3e_hande_robot_description/meshes/hande/collision/finger_2.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${right_finger_inertia_radius}" length="${right_finger_inertia_length}"  mass="${right_finger_mass}">
        <origin xyz="0.0 0.0 ${-0.5 * right_finger_inertia_length}" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>

    <!-- hande installation -->
    <joint name="${prefix}joint_finger" type="prismatic">
      <origin rpy="0 0 0" xyz="0 0 0.099"/>
      <parent link="${prefix}robotiq_hande_base_link"/>
      <child link="${prefix}left_finger"/>
      <axis xyz="-1 0 0"/>
      <limit effort="130" lower="0" upper="0.025" velocity="0.15"/>
    </joint>

    <joint name="robotiq_hande_base_to_${prefix}right_finger" type="prismatic">
      <origin rpy="0 0 0" xyz="0 0 0.099"/>
      <parent link="${prefix}robotiq_hande_base_link"/>
      <child link="${prefix}right_finger"/>
      <axis xyz="1 0 0"/>
      <limit effort="130" lower="0" upper="0.025" velocity="0.15"/>
      <mimic joint="${prefix}joint_finger" multiplier="1" offset="0"/>
    </joint>

    <!-- ROS-Industrial 'flange' frame - attachment point for EEF models -->
    <!-- <link name="${prefix}flange" />
    <joint name="${prefix}wrist_3-flange" type="fixed">
      <parent link="${prefix}wrist_3_link" />
      <child link="${prefix}flange" />
      <origin xyz="0 0 0" rpy="0 ${-pi/2.0} ${-pi/2.0}" />
    </joint> -->

</xacro:macro>











</robot>
